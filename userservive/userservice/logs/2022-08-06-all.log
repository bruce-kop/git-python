Sat, 06 Aug 2022 10:19:09-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 10:19:09-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 10:19:17-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660357157.5546572, 'userid': '85197003-34ad-4ead-81ab-0f9abcd1577c'}
Sat, 06 Aug 2022 10:19:17-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660357157.5546572, 'userid': '85197003-34ad-4ead-81ab-0f9abcd1577c'}
Sat, 06 Aug 2022 10:19:17-root-users.py-[line:134]-INFO-[日志信息]: 172887766
Sat, 06 Aug 2022 10:19:17-root-users.py-[line:134]-INFO-[日志信息]: 172887766
Sat, 06 Aug 2022 10:19:17-root-users.py-[line:138]-INFO-[日志信息]: {'code': 402, 'msg': 'phone format is invalid.', 'data': {}}
Sat, 06 Aug 2022 10:19:17-root-users.py-[line:138]-INFO-[日志信息]: {'code': 402, 'msg': 'phone format is invalid.', 'data': {}}
Sat, 06 Aug 2022 10:25:36-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660357536.2243404, 'userid': '85197003-34ad-4ead-81ab-0f9abcd1577c'}
Sat, 06 Aug 2022 10:25:36-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660357536.2243404, 'userid': '85197003-34ad-4ead-81ab-0f9abcd1577c'}
Sat, 06 Aug 2022 10:28:54-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 10:28:54-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 10:32:09-root-users.py-[line:56]-DEBUG-[日志信息]: (pymysql.err.IntegrityError) (1062, "Duplicate entry 'qq' for key 'user.name'")
[SQL: INSERT INTO user (id, name, avatar, phone, pwd, created_at, updated_at) VALUES (%(id)s, %(name)s, %(avatar)s, %(phone)s, %(pwd)s, %(created_at)s, %(updated_at)s)]
[parameters: {'id': UUID('bc18e22e-071f-4ec1-906c-91d7378df229'), 'name': 'qq', 'avatar': None, 'phone': '13777889933', 'pwd': 'pbkdf2:sha256:260000$sE5MuJIuC2amZfPr$58b0519df930aac7ec69e4bcf2e15ca113c98d206d3b4ad167a273430d24bb44', 'created_at': datetime.datetime(2022, 8, 6, 10, 32, 9, 735413), 'updated_at': None}]
(Background on this error at: https://sqlalche.me/e/14/gkpj)
Sat, 06 Aug 2022 10:32:09-root-users.py-[line:56]-DEBUG-[日志信息]: (pymysql.err.IntegrityError) (1062, "Duplicate entry 'qq' for key 'user.name'")
[SQL: INSERT INTO user (id, name, avatar, phone, pwd, created_at, updated_at) VALUES (%(id)s, %(name)s, %(avatar)s, %(phone)s, %(pwd)s, %(created_at)s, %(updated_at)s)]
[parameters: {'id': UUID('bc18e22e-071f-4ec1-906c-91d7378df229'), 'name': 'qq', 'avatar': None, 'phone': '13777889933', 'pwd': 'pbkdf2:sha256:260000$sE5MuJIuC2amZfPr$58b0519df930aac7ec69e4bcf2e15ca113c98d206d3b4ad167a273430d24bb44', 'created_at': datetime.datetime(2022, 8, 6, 10, 32, 9, 735413), 'updated_at': None}]
(Background on this error at: https://sqlalche.me/e/14/gkpj)
Sat, 06 Aug 2022 10:32:54-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660357974.8193505, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 10:32:54-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660357974.8193505, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 10:32:55-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660357975.2689192, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 10:32:55-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660357975.2689192, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 10:33:24-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660358004.8329349, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 10:33:24-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660358004.8329349, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 10:33:25-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660358005.3671522, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 10:33:25-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660358005.3671522, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 12:40:27-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 12:40:27-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 12:40:32-app-app.py-[line:1449]-ERROR-[日志信息]: Exception on /api/login [POST]
Traceback (most recent call last):
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1519, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1517, in full_dispatch_request
    rv = self.dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1503, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "D:\git-python\userservive\userservice\views\auth.py", line 40, in login
    return jsonify(response)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 302, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 132, in dumps
    return _json.dumps(obj, **kwargs)
  File "D:\Programs\Python\Python310\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 51, in default
    return super().default(o)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ResCode is not JSON serializable
Sat, 06 Aug 2022 12:40:32-app-app.py-[line:1449]-ERROR-[日志信息]: Exception on /api/login [POST]
Traceback (most recent call last):
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1519, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1517, in full_dispatch_request
    rv = self.dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1503, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "D:\git-python\userservive\userservice\views\auth.py", line 40, in login
    return jsonify(response)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 302, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 132, in dumps
    return _json.dumps(obj, **kwargs)
  File "D:\Programs\Python\Python310\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 51, in default
    return super().default(o)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ResCode is not JSON serializable
Sat, 06 Aug 2022 12:40:32-app-app.py-[line:1449]-ERROR-[日志信息]: Exception on /api/login [POST]
Traceback (most recent call last):
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1519, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1517, in full_dispatch_request
    rv = self.dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1503, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "D:\git-python\userservive\userservice\views\auth.py", line 40, in login
    return jsonify(response)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 302, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 132, in dumps
    return _json.dumps(obj, **kwargs)
  File "D:\Programs\Python\Python310\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 51, in default
    return super().default(o)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ResCode is not JSON serializable
Sat, 06 Aug 2022 12:40:32-app-app.py-[line:1449]-ERROR-[日志信息]: Exception on /api/login [POST]
Traceback (most recent call last):
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1519, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1517, in full_dispatch_request
    rv = self.dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1503, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "D:\git-python\userservive\userservice\views\auth.py", line 40, in login
    return jsonify(response)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 302, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 132, in dumps
    return _json.dumps(obj, **kwargs)
  File "D:\Programs\Python\Python310\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 51, in default
    return super().default(o)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ResCode is not JSON serializable
Sat, 06 Aug 2022 12:40:32-app-app.py-[line:1449]-ERROR-[日志信息]: Exception on /api/login [POST]
Traceback (most recent call last):
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1519, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1517, in full_dispatch_request
    rv = self.dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1503, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "D:\git-python\userservive\userservice\views\auth.py", line 40, in login
    return jsonify(response)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 302, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 132, in dumps
    return _json.dumps(obj, **kwargs)
  File "D:\Programs\Python\Python310\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 51, in default
    return super().default(o)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ResCode is not JSON serializable
Sat, 06 Aug 2022 12:40:32-app-app.py-[line:1449]-ERROR-[日志信息]: Exception on /api/login [POST]
Traceback (most recent call last):
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1519, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1517, in full_dispatch_request
    rv = self.dispatch_request()
  File "D:\Programs\Python\Python310\lib\site-packages\flask\app.py", line 1503, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "D:\git-python\userservive\userservice\views\auth.py", line 40, in login
    return jsonify(response)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 302, in jsonify
    f"{dumps(data, indent=indent, separators=separators)}\n",
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 132, in dumps
    return _json.dumps(obj, **kwargs)
  File "D:\Programs\Python\Python310\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "D:\Programs\Python\Python310\lib\site-packages\flask\json\__init__.py", line 51, in default
    return super().default(o)
  File "D:\Programs\Python\Python310\lib\json\encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type ResCode is not JSON serializable
Sat, 06 Aug 2022 12:41:48-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 12:41:48-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 12:45:36-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 12:45:36-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 12:49:37-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 12:49:37-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 12:51:11-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 12:51:11-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 12:56:43-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 12:56:43-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 13:05:53-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 13:05:53-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 13:05:56-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'NoneType' and 'int'
Sat, 06 Aug 2022 13:05:56-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'NoneType' and 'int'
Sat, 06 Aug 2022 13:05:56-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:05:56-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:05:56-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:05:56-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:05:56-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:05:56-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:05:57-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:05:57-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:05:57-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:05:57-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:05:57-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:05:57-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'NoneType' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'NoneType' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:06:27-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'str' and 'int'
Sat, 06 Aug 2022 13:07:32-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'NoneType' and 'int'
Sat, 06 Aug 2022 13:07:32-root-auth.py-[line:80]-ERROR-[日志信息]: '>' not supported between instances of 'NoneType' and 'int'
Sat, 06 Aug 2022 13:08:17-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 13:08:17-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 13:08:21-root-auth.py-[line:81]-ERROR-[日志信息]: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
Sat, 06 Aug 2022 13:08:21-root-auth.py-[line:81]-ERROR-[日志信息]: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
Sat, 06 Aug 2022 13:09:17-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 13:09:17-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 13:09:42-root-auth.py-[line:50]-INFO-[日志信息]: LOGIN ERR EXCEEDS.
Sat, 06 Aug 2022 13:09:42-root-auth.py-[line:50]-INFO-[日志信息]: LOGIN ERR EXCEEDS.
Sat, 06 Aug 2022 13:20:44-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368044.0131369, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:20:44-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368044.0131369, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:21:07-root-app.py-[line:55]-DEBUG-[日志信息]: not enough values to unpack (expected 3, got 1)
Sat, 06 Aug 2022 13:21:07-root-app.py-[line:55]-DEBUG-[日志信息]: not enough values to unpack (expected 3, got 1)
Sat, 06 Aug 2022 13:25:52-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368352.3062515, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:25:52-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368352.3062515, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:26:36-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368396.2171805, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:26:36-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368396.2171805, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:26:36-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368396.7880418, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:26:36-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368396.7880418, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:26:58-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368418.4296412, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:26:58-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368418.4296412, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:26:58-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368418.7169096, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:26:58-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368418.7169096, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:27:09-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368429.120746, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:27:09-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368429.120746, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:27:09-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368429.4426491, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:27:09-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368429.4426491, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:28:07-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 13:28:07-root-app.py-[line:76]-INFO-[日志信息]: start userserver
Sat, 06 Aug 2022 13:28:11-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368491.1672473, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:28:11-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368491.1672473, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:28:11-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368491.3817036, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:28:11-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368491.3817036, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:31:10-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368670.071116, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:31:10-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368670.071116, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:31:10-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368670.365107, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:31:10-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368670.365107, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:31:10-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368670.577049, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:31:10-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368670.577049, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:31:10-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368670.8212204, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
Sat, 06 Aug 2022 13:31:10-root-app.py-[line:70]-INFO-[日志信息]: {'exp': 1660368670.8212204, 'userid': 'bdc66b55-0d12-44a8-bb65-c15e707d9d55'}
